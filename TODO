Things to do before releasing version 4.0.0
============================================

* Release version 3.10.0 (beginning of March 2006?) 
  - 3.10 branch should be the last one maintained in the 3.x.x series

* Switch from CVS to Subversion (this depends on SourceForge - SVN is
  promissed to be available in February 2006)

* Split base module into two separate modules: base and signal. By the way
  of splitting, perform some naming changes:
  - base <-> itppbase.h
  - signal <-> itppsignal.h
  - comm <-> itppcomm.h
  - fixed <-> itppfixed.h
  - protocol <-> itppprotocol.h
  - srccode <-> itppsrccode.h

* Add optional configure switches to exclude some modules from building

* Documentation improvements:
  - updated reference documentation
  - perform hierarchical grouping of modules
  - revise tutorial examples; add new ones; maybe split to basics and more
    advanced stuff
  - tips and trics for Matlab/Octave users
  - restructure "verification" tables into more detailed info for particular
    platforms/distributions

* Go through our current feature requests at SourceForge. There are
  interesting hints and patches posted by the IT++ users.


General improvements for the future
===================================

* Spped improvements:
  - revise the idea of shallow matrix views
  - possibly use external libraries for random number generation

* Possibly add linear programming (LP) in the form of an external library
  "lpsolve"

* Add routines for optimization
  - Use GSL for fminbnd (brent) and fminunc (BFGS)?
  - Add other routines from http://plato.asu.edu/guide.html and
    http://www.mat.univie.ac.at/~neum/glopt.html - LP, SDP, SOCP...  

* Support for existing wireless standards, e.g. GSM/GPRS, WCDMA, WLAN,
  WIMAX, etc. 

* IT++ interpreter


Specific features
=================

* Multi-dimensional arrays

* Add Array<T>::mid(start, nrof_elem), Array<T>::left(nrof_elem),
  Array<T>::right(nrof_elem) (Pal)

* Add cout for Sparse_Vec and Sparse_Mat (Pal)

* The member functions in needs to be revised. The "<<" functions does
  not always match the ">>" functions.

* Check the fastmath functions. It seems like they are not any faster
  than the ordinary math functions.

* Improve the functionality of the Vec::set(char*) and Mat::set(char*)
  members. The current implementation does not allow newlines, tabs,
  etc. Complex numbers should also be supported.

* Add support for Array<Mat<T> > and Array<Vec<T> > in itload.m and itsave.m

* Modify it-file so that a description field and comment fields are
  added.

* Add possibility to change kernel generator.

* Implement bug-fixes in seed. See the home-page of
  Mersenne-Twister. Also change to BSD license.

* Make a m-file load/saver (similar to it-file).

---

* Soft-in soft-out turbo decoder 

* Fix the decode_trunk() function of the Viterbi decoder, so it might 
be used in a loop. Currently, the internal state of the trellis is always 
recalculated from scratch

* Class for operation on index sets?

* Revision of (scalar) modulators to use fast likelihood algebra and
to take soft inputs (for higher order constellations)

