====================================================
mat_test: Test of matrix operations in mat.h/mat.cpp
====================================================
A = [[-0.0650972 -0.088101 1.20215 0.997525]
 [0.133919 0.279427 0.733641 0.075827]
 [-1.57332 1.67441 -0.604153 -1.2775]]
B = [[-0.544623 -0.67928 0.179318 -0.0176478]
 [-2.39672 -0.110295 0.893556 0.247416]
 [-0.659203 -0.0390913 2.10251 -1.29656]]
C = [[-0.355254 1.3661 0.324178]
 [-0.667981 0.831051 -0.638032]
 [-0.536178 0.292845 -1.09367]
 [0.181709 -0.548248 0.00708853]]
E = [[-1.04415 -0.289493 0.520473]]

Testing indexing
================
A(1,2) = 0.733641
A(2,3) = -1.2775
A(6) = 1.20215
A(0,2,1,3) = [[-0.088101 1.20215 0.997525]
 [0.279427 0.733641 0.075827]
 [1.67441 -0.604153 -1.2775]]
A.get_row(1) = [0.133919 0.279427 0.733641 0.075827]
A.get_rows(1,2) = [[0.133919 0.279427 0.733641 0.075827]
 [-1.57332 1.67441 -0.604153 -1.2775]]
A.get_col(2) = [1.20215 0.733641 -0.604153]
A.get_cols(2,3) = [[1.20215 0.997525]
 [0.733641 0.075827]
 [-0.604153 -1.2775]]

Testing initialisation with string
==================================
sM = "0xFF, -021 ,   100; 0,-0x01; 0xA, 10 012;  "
sM = [[255 -17 100]
 [0 -1 0]
 [10 10 10]]
cM = " 1+3i, (.33,1) ;  (333,-1) 2-0.2E6i"
cM = [[1+3i 0.33+1i]
 [333-1i 2-200000i]]
bM = " 1 1 0; 0 1; 1 1 ,1,   1; ; 0 1"
bM = [[1 1 0 0]
 [0 1 0 0]
 [1 1 1 1]
 [0 0 0 0]
 [0 1 0 0]]

Testing setting/copying/swapping
================================
v = [-0.927306 -0.669854 0.093881 -0.827762]
u = [-0.325091 0.6125 -1.47178]
D = [[-0.0650972 -0.088101 1.20215 0.997525]
 [0.133919 0.279427 0.733641 0.075827]
 [-1.57332 1.67441 -0.604153 -1.2775]]
D.set_row(1, v):
D = [[-0.0650972 -0.088101 1.20215 0.997525]
 [-0.927306 -0.669854 0.093881 -0.827762]
 [-1.57332 1.67441 -0.604153 -1.2775]]
D.set_col(2, u):
D = [[-0.0650972 -0.088101 -0.325091 0.997525]
 [-0.927306 -0.669854 0.6125 -0.827762]
 [-1.57332 1.67441 -1.47178 -1.2775]]
D.copy_row(1, 2):
D = [[-0.0650972 -0.088101 -0.325091 0.997525]
 [-1.57332 1.67441 -1.47178 -1.2775]
 [-1.57332 1.67441 -1.47178 -1.2775]]
D.copy_col(2, 3):
D = [[-0.0650972 -0.088101 0.997525 0.997525]
 [-1.57332 1.67441 -1.2775 -1.2775]
 [-1.57332 1.67441 -1.2775 -1.2775]]
D.swap_rows(0, 2):
D = [[-1.57332 1.67441 -1.2775 -1.2775]
 [-1.57332 1.67441 -1.2775 -1.2775]
 [-0.0650972 -0.088101 0.997525 0.997525]]
D.swap_cols(0, 3):
D = [[-1.2775 1.67441 -1.2775 -1.57332]
 [-1.2775 1.67441 -1.2775 -1.57332]
 [0.997525 -0.088101 0.997525 -0.0650972]]
D.set_submatrix(1,2,2,3, A(0,1,0,1): 
D = [[-1.2775 1.67441 -1.2775 -1.57332]
 [-1.2775 1.67441 -0.0650972 -0.088101]
 [0.997525 -0.088101 0.133919 0.279427]]
D.set_submatrix(1,2,2,3, 5.3): 
D = [[-1.2775 1.67441 -1.2775 -1.57332]
 [-1.2775 1.67441 5.3 5.3]
 [0.997525 -0.088101 5.3 5.3]]
A = [[-0.0650972 -0.088101 1.20215 0.997525]
 [0.133919 0.279427 0.733641 0.075827]
 [-1.57332 1.67441 -0.604153 -1.2775]]
B = [[-0.544623 -0.67928 0.179318 -0.0176478]
 [-2.39672 -0.110295 0.893556 0.247416]
 [-0.659203 -0.0390913 2.10251 -1.29656]]
D = concat_horizontal(A,B):
D = [[-0.0650972 -0.088101 1.20215 0.997525 -0.544623 -0.67928 0.179318 -0.0176478]
 [0.133919 0.279427 0.733641 0.075827 -2.39672 -0.110295 0.893556 0.247416]
 [-1.57332 1.67441 -0.604153 -1.2775 -0.659203 -0.0390913 2.10251 -1.29656]]
D = concat_vertical(A,B):
D = [[-0.0650972 -0.088101 1.20215 0.997525]
 [0.133919 0.279427 0.733641 0.075827]
 [-1.57332 1.67441 -0.604153 -1.2775]
 [-0.544623 -0.67928 0.179318 -0.0176478]
 [-2.39672 -0.110295 0.893556 0.247416]
 [-0.659203 -0.0390913 2.10251 -1.29656]]

Testing operators (=, +, - *, /)
================================
D = A = [[-0.0650972 -0.088101 1.20215 0.997525]
 [0.133919 0.279427 0.733641 0.075827]
 [-1.57332 1.67441 -0.604153 -1.2775]]
D = 5.3 = [[5.3 5.3 5.3 5.3]
 [5.3 5.3 5.3 5.3]
 [5.3 5.3 5.3 5.3]]
D = A+B = [[-0.60972 -0.767381 1.38147 0.979877]
 [-2.2628 0.169132 1.6272 0.323243]
 [-2.23252 1.63532 1.49836 -2.57406]]
D += A = [[-0.674817 -0.855482 2.58362 1.9774]
 [-2.12888 0.44856 2.36084 0.39907]
 [-3.80584 3.30973 0.894204 -3.85156]]
D = A+5.3 = [[5.2349 5.2119 6.50215 6.29752]
 [5.43392 5.57943 6.03364 5.37583]
 [3.72668 6.97441 4.69585 4.0225]]
D += 5.3 = [[10.5349 10.5119 11.8022 11.5975]
 [10.7339 10.8794 11.3336 10.6758]
 [9.02668 12.2744 9.99585 9.3225]]
D = A-B = [[0.479526 0.591179 1.02283 1.01517]
 [2.53063 0.389723 -0.159914 -0.171589]
 [-0.914118 1.7135 -2.70666 0.0190548]]
D -= A = [[0.544623 0.67928 -0.179318 0.0176478]
 [2.39672 0.110295 -0.893556 -0.247416]
 [0.659203 0.0390913 -2.10251 1.29656]]
D = A-5.3 = [[-5.3651 -5.3881 -4.09785 -4.30248]
 [-5.16608 -5.02057 -4.56636 -5.22417]
 [-6.87332 -3.62559 -5.90415 -6.5775]]
D -= 5.3 = [[-10.6651 -10.6881 -9.39785 -9.60248]
 [-10.4661 -10.3206 -9.86636 -10.5242]
 [-12.1733 -8.92559 -11.2042 -11.8775]]
D = A*C = [[-0.381333 -0.356992 -1.27258]
 [-0.613811 0.588435 -0.936692]
 [-0.467743 -0.234323 -0.926675]]
D *= A = [[1.97919 -2.19697 0.0485057 1.21826]
 [1.59248 -1.3499 0.259711 0.628953]
 [1.45703 -1.5759 -0.174354 0.699476]]
D = A*5.3 = [[-0.345015 -0.466935 6.37141 5.28688]
 [0.709769 1.48097 3.8883 0.401883]
 [-8.3386 8.87436 -3.20201 -6.77076]]
D = 3.9*A = [[-0.253879 -0.343594 4.6884 3.89035]
 [0.522283 1.08977 2.8612 0.295725]
 [-6.13595 6.53019 -2.3562 -4.98226]]
D *= 5.3 = [[-1.34556 -1.82105 24.8485 20.6188]
 [2.7681 5.77576 15.1644 1.56734]
 [-32.5205 34.61 -12.4878 -26.406]]
D = elem_mult(A,B) = [[0.0354534 0.0598453 0.215568 -0.0176041]
 [-0.320965 -0.0308195 0.655549 0.0187608]
 [1.03714 -0.0654548 -1.27024 1.65635]]
s = A*v = [-0.593474 -0.305251 1.33809]
D = u*E = [[0.339443 0.0941117 -0.169201]
 [-0.639541 -0.177315 0.31879]
 [1.53675 0.42607 -0.76602]]
D = A/5.3 = [[-0.0122825 -0.0166228 0.226821 0.188212]
 [0.0252677 0.0527222 0.138423 0.014307]
 [-0.296853 0.315926 -0.113991 -0.241038]]
D /= 5.3 = [[-0.00231745 -0.00313638 0.0427965 0.0355117]
 [0.00476748 0.00994758 0.0261175 0.00269943]
 [-0.05601 0.0596087 -0.0215078 -0.0454789]]
D = elem_div(A,B) = [[0.119527 0.129698 6.70401 -56.524]
 [-0.0558759 -2.53345 0.821036 0.306475]
 [2.3867 -42.8333 -0.287348 0.985304]]
D /= A = [[-1.83613 -1.47215 5.57667 -56.6643]
 [-0.417238 -9.06658 1.11912 4.04177]
 [-1.51698 -25.5811 0.475622 -0.771274]]
