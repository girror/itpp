
******* Testing Sparse_Vec *******
v1=[0 3 0 0 0]
v2=[0 1 2 0 0]
v1+v2=
[0 4 2 0 0]
v1*v2=3
density(v1)=0.2
v1=[0 0 0 0 0]
Set [1 2 4 3] to the indices [0 2 2 3]
v1=[1 0 6 3 0]
Set new [1 2 4 3] to the indices [0 2 2 3]
Unnoticed error in set_new() if the same index is used several times
v1=[1 0 4 3 0]
v1(for v1-=v2) = [0 -1 -2 0 0]
v1(for v1/=4) = [0 -0.25 -0.5 0 0]
v1(for v1*=2) = [0 -0.5 -1 0 0]
v1(for v1+=v2/2) = [0 0 0 0 0]
number of non-zero elements in v1: nnz = 0
Add [-1 5 -2 4] to the indices [0 2 2 1]
v1=[-1 4 3 0 0]
v1(element 2 cleared) = [-1 4 0 0 0]
v3=
[3 0]
v3=[0 0 0 0 0]
v4=[0 1 2 0 0]
v5=[0 1 4 0 0]
v4 not equal to v5

******* Testing Sparse_Mat *******
m1=
[[0 0 0]
 [0 3 0]
 [0 0 0]]
m2=
[[0 0 0]
 [0 0 1]
 [0 2 0]]
m1+m2=
[[0 0 0]
 [0 3 1]
 [0 2 0]]
m1*m2=
[[0 0 0]
 [0 0 3]
 [0 0 0]]
density(m1)=0.111111
transpose(m2)=
[[0 0 0]
 [0 0 2]
 [0 1 0]]
m1.zeros()=
[[0 0 0]
 [0 0 0]
 [0 0 0]]
m1(-=m2)=
[[0 0 0]
 [0 0 -1]
 [0 -2 0]]
m1(/=4)=
[[0 0 0]
 [0 0 -0.25]
 [0 -0.5 0]]
m1(*=2)=
[[0 0 0]
 [0 0 -0.5]
 [0 -1 0]]
m1.add_elem(0,2,4)=
[[0 0 4]
 [0 0 -0.5]
 [0 -1 0]]
m1.clear_elem(1,2)=
[[0 0 4]
 [0 0 0]
 [0 -1 0]]
m3=
[[3 0 0]
 [0 0 0]]
m4=
[[0 1]
 [0 0]
 [2 0]]
m3*m4=
[[0 3]
 [0 0]]
transpose(m4)=
[[0 0 2]
 [1 0 0]]
trans_mult(m4,m4)=[[4 0]
 [0 1]]
mult_trans(m4,m4)=[[1 0 0]
 [0 0 0]
 [0 0 4]]
mult_trans(m4,m4)=[[1 0 0]
 [0 0 0]
 [0 0 4]]
v = [1 2 3]
m3 * v = [3 0]
A = [[-0.283885 1.24942 -0.596145 -0.300385 2.36508]
 [1.36446 1.55783 -1.19732 -1.0746 1.22804]
 [0.906001 0.56497 -1.26756 2.36476 0.234136]]
B = [[-0.732016 -0.869443 -0.227649]
 [-2.10553 -0.0504762 -1.83729]
 [-0.923457 0.799682 0.0511841]
 [-1.89227 1.02849 1.44132]
 [-0.664315 -0.900489 -1.48058]]
x = [1.07507 -0.396638 0.51065]
y = [1.10323 0.910165 1.12342 1.46072 -0.269572]
C = [[-2.87512 -2.73164 -6.19606]
 [-1.95557 -4.43348 -6.60115]
 [-5.31254 0.391404 1.75258]]
z1 = [-0.922069 -0.322638 3.48086]
z2 = [-0.383745 1.01382 -0.813279 1.31086 2.1751]
