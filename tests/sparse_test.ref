
******* Testing Sparse_Vec *******
v1=[0 3 0 0 0]
v2=[0 1 2 0 0]
v1+v2=
[0 4 2 0 0]
v1*v2=3
density(v1)=0.2
v1=[0 0 0 0 0]
Set [1 2 4 3] to the indices [0 2 2 3]
v1=[1 0 6 3 0]
Set new [1 2 4 3] to the indices [0 2 2 3]
Unnoticed error in set_new() if the same index is used several times
v1=[1 0 4 3 0]
v1(for v1-=v2) = [0 -1 -2 0 0]
v1(for v1/=4) = [0 -0.25 -0.5 0 0]
v1(for v1*=2) = [0 -0.5 -1 0 0]
v1(for v1+=v2/2) = [0 0 0 0 0]
number of non-zero elements in v1: nnz = 0
Add [-1 5 -2 4] to the indices [0 2 2 1]
v1=[-1 4 3 0 0]
v1(element 2 cleared) = [-1 4 0 0 0]
v3=
[3 0]
v3=[0 0 0 0 0]
v4=[0 1 2 0 0]
v5=[0 1 4 0 0]
v4 not equal to v5

******* Testing Sparse_Mat *******
m1=
[[0 0 0]
 [0 3 0]
 [0 0 0]]
m2=
[[0 0 0]
 [0 0 1]
 [0 2 0]]
m1+m2=
[[0 0 0]
 [0 3 1]
 [0 2 0]]
m1*m2=
[[0 0 0]
 [0 0 3]
 [0 0 0]]
density(m1)=0.111111
transpose(m2)=
[[0 0 0]
 [0 0 2]
 [0 1 0]]
m1.zeros()=
[[0 0 0]
 [0 0 0]
 [0 0 0]]
m1(-=m2)=
[[0 0 0]
 [0 0 -1]
 [0 -2 0]]
m1(/=4)=
[[0 0 0]
 [0 0 -0.25]
 [0 -0.5 0]]
m1(*=2)=
[[0 0 0]
 [0 0 -0.5]
 [0 -1 0]]
m1.add_elem(0,2,4)=
[[0 0 4]
 [0 0 -0.5]
 [0 -1 0]]
m1.clear_elem(1,2)=
[[0 0 4]
 [0 0 0]
 [0 -1 0]]
m3=
[[3 0 0]
 [0 0 0]]
m4=
[[0 1]
 [0 0]
 [2 0]]
m3*m4=
[[0 3]
 [0 0]]
transpose(m4)=
[[0 0 2]
 [1 0 0]]
trans_mult(m4,m4)=[[4 0]
 [0 1]]
mult_trans(m4,m4)=[[1 0 0]
 [0 0 0]
 [0 0 4]]
mult_trans(m4,m4)=[[1 0 0]
 [0 0 0]
 [0 0 4]]
v = [1 2 3]
m3 * v = [3 0]
A = [[0.764873 -0.451817 -0.556704 -0.902459 -0.129499]
 [-1.13073 1.36468 1.00977 -0.946328 0.28002]
 [0.452336 0.355365 0.251912 0.403829 -0.439783]]
B = [[-0.0494359 1.02093 0.611692]
 [-0.235643 1.25461 -0.0799272]
 [-0.268905 1.00032 -0.101654]
 [-1.53793 -1.12474 1.02917]
 [1.67876 0.369076 -1.37943]]
x = [-0.534532 1.51576 -0.116042]
y = [1.18937 -0.105928 0.103149 -0.86184 -0.420697]
C = [[1.38888 0.624386 -0.189579]
 [1.38827 2.73555 -2.26358]
 [-1.5332 0.543126 1.24494]]
z1 = [1.73241 -0.687481 0.363317]
z2 = [-2.17526 2.2688 1.79892 -0.998877 0.544699]
