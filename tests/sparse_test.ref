
******* Testing Sparse_Vec *******
v1=[0 3 0 0 0]
v2=[0 1 2 0 0]
v1+v2=
[0 4 2 0 0]
v1*v2=3
density(v1)=0.2
v1=[0 0 0 0 0]
Set [1 2 4 3] to the indices [0 2 2 3]
v1=[1 0 6 3 0]
Set new [1 2 4 3] to the indices [0 2 2 3]
Unnoticed error in set_new() if the same index is used several times
v1=[1 0 4 3 0]
v1(for v1-=v2) = [0 -1 -2 0 0]
v1(for v1/=4) = [0 -0.25 -0.5 0 0]
v1(for v1*=2) = [0 -0.5 -1 0 0]
v1(for v1+=v2/2) = [0 0 0 0 0]
number of non-zero elements in v1: nnz = 0
Add [-1 5 -2 4] to the indices [0 2 2 1]
v1=[-1 4 3 0 0]
v1(element 2 cleared) = [-1 4 0 0 0]
v3=
[3 0]
v3=[0 0 0 0 0]
v4=[0 1 2 0 0]
v5=[0 1 4 0 0]
v4 not equal to v5

******* Testing Sparse_Mat *******
m1=
[[0 0 0]
 [0 3 0]
 [0 0 0]]
m2=
[[0 0 0]
 [0 0 1]
 [0 2 0]]
m1+m2=
[[0 0 0]
 [0 3 1]
 [0 2 0]]
m1*m2=
[[0 0 0]
 [0 0 3]
 [0 0 0]]
density(m1)=0.111111
transpose(m2)=
[[0 0 0]
 [0 0 2]
 [0 1 0]]
m1.zeros()=
[[0 0 0]
 [0 0 0]
 [0 0 0]]
m1(-=m2)=
[[0 0 0]
 [0 0 -1]
 [0 -2 0]]
m1(/=4)=
[[0 0 0]
 [0 0 -0.25]
 [0 -0.5 0]]
m1(*=2)=
[[0 0 0]
 [0 0 -0.5]
 [0 -1 0]]
m1.add_elem(0,2,4)=
[[0 0 4]
 [0 0 -0.5]
 [0 -1 0]]
m1.clear_elem(1,2)=
[[0 0 4]
 [0 0 0]
 [0 -1 0]]
m3=
[[3 0 0]
 [0 0 0]]
m4=
[[0 1]
 [0 0]
 [2 0]]
m3*m4=
[[0 3]
 [0 0]]
transpose(m4)=
[[0 0 2]
 [1 0 0]]
trans_mult(m4,m4)=[[4 0]
 [0 1]]
mult_trans(m4,m4)=[[1 0 0]
 [0 0 0]
 [0 0 4]]
mult_trans(m4,m4)=[[1 0 0]
 [0 0 0]
 [0 0 4]]
v = [1 2 3]
m3 * v = [3 0]
A = [[-0.0650972 -0.088101 1.20215 0.997525 -0.544623]
 [0.133919 0.279427 0.733641 0.075827 -2.39672]
 [-1.57332 1.67441 -0.604153 -1.2775 -0.659203]]
B = [[-0.110295 -0.0176478 -0.536178]
 [-0.0390913 0.247416 0.181709]
 [0.179318 -1.29656 1.3661]
 [0.893556 -0.355254 0.831051]
 [2.10251 -0.667981 0.292845]]
x = [0.324178 -0.638032 -1.09367]
y = [-0.927306 -0.669854 0.093881 -0.827762 -0.325091]
C = [[-0.0275398 -1.56989 2.33065]
 [-4.8655 0.689585 0.342344]
 [-2.52776 2.11953 -0.932209]]
z1 = [-0.416422 0.4739 1.55239]
z2 = [1.61414 -2.03809 0.582368 1.67216 2.07357]
