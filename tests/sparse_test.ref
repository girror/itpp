
******* Testing Sparse_Vec *******
v1=[0 3 0 0 0]
v2=[0 1 2 0 0]
v1+v2=
[0 4 2 0 0]
v1*v2=3
density(v1)=0.2
v1=[0 0 0 0 0]
Set [1 2 4 3] to the indices [0 2 2 3]
v1=[1 0 6 3 0]
Set new [1 2 4 3] to the indices [0 2 2 3]
Unnoticed error in set_new() if the same index is used several times
v1=[1 0 4 3 0]
v1(for v1-=v2) = [0 -1 -2 0 0]
v1(for v1/=4) = [0 -0.25 -0.5 0 0]
v1(for v1*=2) = [0 -0.5 -1 0 0]
v1(for v1+=v2/2) = [0 0 0 0 0]
number of non-zero elements in v1: nnz = 0
Add [-1 5 -2 4] to the indices [0 2 2 1]
v1=[-1 4 3 0 0]
v1(element 2 cleared) = [-1 4 0 0 0]
v3=
[3 0]
v3=[0 0 0 0 0]
v4=[0 1 2 0 0]
v5=[0 1 4 0 0]
v4 not equal to v5

******* Testing Sparse_Mat *******
m1=
[[0 0 0]
 [0 3 0]
 [0 0 0]]
m2=
[[0 0 0]
 [0 0 1]
 [0 2 0]]
m1+m2=
[[0 0 0]
 [0 3 1]
 [0 2 0]]
m1*m2=
[[0 0 0]
 [0 0 3]
 [0 0 0]]
density(m1)=0.111111
transpose(m2)=
[[0 0 0]
 [0 0 2]
 [0 1 0]]
m1.zeros()=
[[0 0 0]
 [0 0 0]
 [0 0 0]]
m1(-=m2)=
[[0 0 0]
 [0 0 -1]
 [0 -2 0]]
m1(/=4)=
[[0 0 0]
 [0 0 -0.25]
 [0 -0.5 0]]
m1(*=2)=
[[0 0 0]
 [0 0 -0.5]
 [0 -1 0]]
m1.add_elem(0,2,4)=
[[0 0 4]
 [0 0 -0.5]
 [0 -1 0]]
m1.clear_elem(1,2)=
[[0 0 4]
 [0 0 0]
 [0 -1 0]]
m3=
[[3 0 0]
 [0 0 0]]
m4=
[[0 1]
 [0 0]
 [2 0]]
m3*m4=
[[0 3]
 [0 0]]
transpose(m4)=
[[0 0 2]
 [1 0 0]]
trans_mult(m4,m4)=[[4 0]
 [0 1]]
mult_trans(m4,m4)=[[1 0 0]
 [0 0 0]
 [0 0 4]]
mult_trans(m4,m4)=[[1 0 0]
 [0 0 0]
 [0 0 4]]
v = [1 2 3]
m3 * v = [3 0]
A = [[1.45728 0.937431 -0.505866 1.02252 0.917611]
 [-1.13848 0.308753 0.746416 0.432204 -0.403519]
 [1.12252 1.30289 -0.697447 0.563233 0.457302]]
B = [[0.00583875 0.284213 -0.516334]
 [-0.0358695 -0.281477 -1.96168]
 [-0.453088 1.51511 -2.85784]
 [-1.72459 1.09403 1.13228]
 [1.19487 1.63073 0.887216]]
x = [-1.36627 -0.45695 0.35137]
y = [0.352447 -1.02175 1.11508 0.67581 -0.804102]
C = [[-0.462921 1.99892 0.826205]
 [-1.58344 0.535242 -2.01961]
 [-0.149103 0.257521 -0.0987819]]
z1 = [-1.0551 0.73215 -1.70037]
z2 = [-1.0764 -0.964076 0.105014 -1.39664 -0.908637]
