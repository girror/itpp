=============================
   Testing Vec<bin> (bvec)
=============================
a = [0 1 1 0 1 1 0 0 0 0]
b = [0 0 1 0 0 1 1 1 1 1]
c = 1
a+b = [0 1 0 0 1 0 1 1 1 1]
a+c = [1 0 0 1 0 0 1 1 1 1]
c+a = [1 0 0 1 0 0 1 1 1 1]
a+=b; a = [0 1 0 0 1 0 1 1 1 1]
a+=c; a = [1 0 0 1 0 0 1 1 1 1]
a-b = [0 1 0 0 1 0 1 1 1 1]
a-c = [1 0 0 1 0 0 1 1 1 1]
c-a = [1 0 0 1 0 0 1 1 1 1]
a-=b; a = [0 1 0 0 1 0 1 1 1 1]
a-=c; a = [1 0 0 1 0 0 1 1 1 1]
-a = [0 1 1 0 1 1 0 0 0 0]
a*b = 0
dot(a,b) = 0
outer_product(a,b) = [[0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 1 1 1 1 1]
 [0 0 1 0 0 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 1 1 1 1 1]
 [0 0 1 0 0 1 1 1 1 1]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0]]
a*c = [0 1 1 0 1 1 0 0 0 0]
c*a = [0 1 1 0 1 1 0 0 0 0]
a*=c; a = [0 1 1 0 1 1 0 0 0 0]
elem_mult(a,b) = [0 0 1 0 0 1 0 0 0 0]
elem_mult_out(a,b,x); x = [0 0 1 0 0 1 0 0 0 0]
elem_mult_inplace(a,b); b = [0 0 1 0 0 1 0 0 0 0]
elem_mult_sum(a,b) = 0
a/c = [1 1 1 1 1 1 1 1 1 1]
c/a = [1 1 1 1 1 1 1 1 1 1]
a/=c; a = [1 1 1 1 1 1 1 1 1 1]
a/=b; a = [0 1 1 0 1 1 1 1 1 1]
elem_div(a,b) = [0 1 1 0 1 1 1 1 1 1]
elem_div_out(a,b,x); x = [0 1 1 0 1 1 1 1 1 1]
elem_div_sum(a,b) = 0
concat(a,b) = [0 1 1 0 1 1 0 0 0 0 0 0 1 0 0 1 1 1 1 1]
concat(a,c) = [0 1 1 0 1 1 0 0 0 0 1]
concat(c,a) = [1 0 1 1 0 1 1 0 0 0 0]
concat(a,b,a) = [0 1 1 0 1 1 0 0 0 0 0 0 1 0 0 1 1 1 1 1 0 1 1 0 1 1 0 0 0 0]
concat(a,b,a,b) = [0 1 1 0 1 1 0 0 0 0 0 0 1 0 0 1 1 1 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 0 0 1 1 1 1 1]
concat(a,b,a,b,a) = [0 1 1 0 1 1 0 0 0 0 0 0 1 0 0 1 1 1 1 1 0 1 1 0 1 1 0 0 0 0 0 0 1 0 0 1 1 1 1 1 0 1 1 0 1 1 0 0 0 0]
a.T() = [[0 1 1 0 1 1 0 0 0 0]]
a.H() = [[0 1 1 0 1 1 0 0 0 0]]
a.size() = 10
a.set_size(a.size()+3, true); a = [0 1 1 0 1 1 0 0 0 0 0 0 0]
a.set_size(a.size()-6, true); a = [0 1 1 0 1 1 0]
a(5) = 1
a(0,5) = [0 1 1 0 1 1]
a(6,-1) = [0 0 0 0]
a.right(3) = [0 0 0]
a.left(4) = [0 1 1 0]
a.mid(3,2) = [0 1]
a.split(0) = [];   a = [0 1 1 0 1 1 0 0 0 0]
a.split(a.size()) = [0 1 1 0 1 1 0 0 0 0];   a = []
a.split(4) = [0 1 1 0];   a = [1 1 0 0 0 0]
a("0 5 6 7") = [0 1 0 0]
a(5) = a(6); a = [1 1 0 0 0 0]
a.shift_left(c,2) = [1 0 1 1 0 0 0 0 1 1]
a.shift_right(c) = [1 0 1 1 0 1 1 0 0 0]
a.shift_left(b.mid(0,2)) = [1 0 1 1 0 0 0 0 0 0]
a.shift_right(b.right(5)) = [1 1 1 1 1 0 1 1 0 1]
a.set_subvector(4,-1, c) = [0 1 1 0 1 1 1 1 1 1]
a.set_subvector(4,6, b(3,5)) = [0 1 1 0 0 0 1 0 0 0]
a.set_subvector(0, b) = [0 0 1 0 0 1 1 1 1 1]
a.replace_mid(4, b(3,5)) = [0 1 1 0 0 0 1 0 0 0]
a.del(6) = [0 1 1 0 1 1 0 0 0]
a.del(3,9) = [0 1 1]
a.ins(0,c) = [1 0 1 1 0 1 1 0 0 0 0]
a.ins(2,c) = [0 1 1 1 0 1 1 0 0 0 0]
a.ins(10,c) = [0 1 1 0 1 1 0 0 0 0 1]
a.ins(3, b(0,2)) = [0 1 1 0 0 1 0 1 1 0 0 0 0]
a.zeros(); a = [0 0 0 0 0 0 0 0 0 0]
a.ones(); a = [1 1 1 1 1 1 1 1 1 1]
a = c; a = [1 1 1 1 1 1 1 1 1 1]
a = b(0,4); a = [0 0 1 0 0]
a = b.T(); a = [0 0 1 0 0 1 1 1 1 1]
a = b.T().T(); a = [0 0 1 0 0 1 1 1 1 1]

(a == c) = [0 1 1 0 1 1 0 0 0 0]
(a != c) = [1 0 0 1 0 0 1 1 1 1]
(a <= c) = [1 1 1 1 1 1 1 1 1 1]
(a >= c) = [0 1 1 0 1 1 0 0 0 0]
(a < c) = [1 0 0 1 0 0 1 1 1 1]
(a > c) = [0 0 0 0 0 0 0 0 0 0]
(a == b) = 0
(a != b) = 1
a2 = a; (a2 == a) = 1
a2 = a; (a2 != a) = 0

=============================
   Testing Vec<int> (ivec)
=============================
a = [4 2 9 6 9 6 5 6 2 3]
b = [2 1 6 7 6 7 1 7 1 2]
c = 5
a+b = [6 3 15 13 15 13 6 13 3 5]
a+c = [9 7 14 11 14 11 10 11 7 8]
c+a = [9 7 14 11 14 11 10 11 7 8]
a+=b; a = [6 3 15 13 15 13 6 13 3 5]
a+=c; a = [9 7 14 11 14 11 10 11 7 8]
a-b = [2 1 3 -1 3 -1 4 -1 1 1]
a-c = [-1 -3 4 1 4 1 0 1 -3 -2]
c-a = [1 3 -4 -1 -4 -1 0 -1 3 2]
a-=b; a = [2 1 3 -1 3 -1 4 -1 1 1]
a-=c; a = [-1 -3 4 1 4 1 0 1 -3 -2]
-a = [-4 -2 -9 -6 -9 -6 -5 -6 -2 -3]
a*b = 257
dot(a,b) = 257
outer_product(a,b) = [[8 4 24 28 24 28 4 28 4 8]
 [4 2 12 14 12 14 2 14 2 4]
 [18 9 54 63 54 63 9 63 9 18]
 [12 6 36 42 36 42 6 42 6 12]
 [18 9 54 63 54 63 9 63 9 18]
 [12 6 36 42 36 42 6 42 6 12]
 [10 5 30 35 30 35 5 35 5 10]
 [12 6 36 42 36 42 6 42 6 12]
 [4 2 12 14 12 14 2 14 2 4]
 [6 3 18 21 18 21 3 21 3 6]]
a*c = [20 10 45 30 45 30 25 30 10 15]
c*a = [20 10 45 30 45 30 25 30 10 15]
a*=c; a = [20 10 45 30 45 30 25 30 10 15]
elem_mult(a,b) = [8 2 54 42 54 42 5 42 2 6]
elem_mult_out(a,b,x); x = [8 2 54 42 54 42 5 42 2 6]
elem_mult_inplace(a,b); b = [8 2 54 42 54 42 5 42 2 6]
elem_mult_sum(a,b) = 257
a/c = [0 0 1 1 1 1 1 1 0 0]
c/a = [1 2 0 0 0 0 1 0 2 1]
a/=c; a = [0 0 1 1 1 1 1 1 0 0]
a/=b; a = [2 2 1 0 1 0 5 0 2 1]
elem_div(a,b) = [2 2 1 0 1 0 5 0 2 1]
elem_div_out(a,b,x); x = [2 2 1 0 1 0 5 0 2 1]
elem_div_sum(a,b) = 14
concat(a,b) = [4 2 9 6 9 6 5 6 2 3 2 1 6 7 6 7 1 7 1 2]
concat(a,c) = [4 2 9 6 9 6 5 6 2 3 5]
concat(c,a) = [5 4 2 9 6 9 6 5 6 2 3]
concat(a,b,a) = [4 2 9 6 9 6 5 6 2 3 2 1 6 7 6 7 1 7 1 2 4 2 9 6 9 6 5 6 2 3]
concat(a,b,a,b) = [4 2 9 6 9 6 5 6 2 3 2 1 6 7 6 7 1 7 1 2 4 2 9 6 9 6 5 6 2 3 2 1 6 7 6 7 1 7 1 2]
concat(a,b,a,b,a) = [4 2 9 6 9 6 5 6 2 3 2 1 6 7 6 7 1 7 1 2 4 2 9 6 9 6 5 6 2 3 2 1 6 7 6 7 1 7 1 2 4 2 9 6 9 6 5 6 2 3]
a.T() = [[4 2 9 6 9 6 5 6 2 3]]
a.H() = [[4 2 9 6 9 6 5 6 2 3]]
a.size() = 10
a.set_size(a.size()+3, true); a = [4 2 9 6 9 6 5 6 2 3 0 0 0]
a.set_size(a.size()-6, true); a = [4 2 9 6 9 6 5]
a(5) = 6
a(0,5) = [4 2 9 6 9 6]
a(6,-1) = [5 6 2 3]
a.right(3) = [6 2 3]
a.left(4) = [4 2 9 6]
a.mid(3,2) = [6 9]
a.split(0) = [];   a = [4 2 9 6 9 6 5 6 2 3]
a.split(a.size()) = [4 2 9 6 9 6 5 6 2 3];   a = []
a.split(4) = [4 2 9 6];   a = [9 6 5 6 2 3]
a("0 5 6 7") = [4 6 5 6]
a(5) = a(6); a = [9 6 5 6 2 5]
a.shift_left(c,2) = [9 6 9 6 5 6 2 3 5 5]
a.shift_right(c) = [5 4 2 9 6 9 6 5 6 2]
a.shift_left(b.mid(0,2)) = [9 6 9 6 5 6 2 3 2 1]
a.shift_right(b.right(5)) = [7 1 7 1 2 4 2 9 6 9]
a.set_subvector(4,-1, c) = [4 2 9 6 5 5 5 5 5 5]
a.set_subvector(4,6, b(3,5)) = [4 2 9 6 7 6 7 6 2 3]
a.set_subvector(0, b) = [2 1 6 7 6 7 1 7 1 2]
a.replace_mid(4, b(3,5)) = [4 2 9 6 7 6 7 6 2 3]
a.del(6) = [4 2 9 6 9 6 6 2 3]
a.del(3,9) = [4 2 9]
a.ins(0,c) = [5 4 2 9 6 9 6 5 6 2 3]
a.ins(2,c) = [4 2 5 9 6 9 6 5 6 2 3]
a.ins(10,c) = [4 2 9 6 9 6 5 6 2 3 5]
a.ins(3, b(0,2)) = [4 2 9 2 1 6 6 9 6 5 6 2 3]
a.zeros(); a = [0 0 0 0 0 0 0 0 0 0]
a.ones(); a = [1 1 1 1 1 1 1 1 1 1]
a = c; a = [5 5 5 5 5 5 5 5 5 5]
a = b(0,4); a = [2 1 6 7 6]
a = b.T(); a = [2 1 6 7 6 7 1 7 1 2]
a = b.T().T(); a = [2 1 6 7 6 7 1 7 1 2]

(a == c) = [0 0 0 0 0 0 1 0 0 0]
(a != c) = [1 1 1 1 1 1 0 1 1 1]
(a <= c) = [1 1 0 0 0 0 1 0 1 1]
(a >= c) = [0 0 1 1 1 1 1 1 0 0]
(a < c) = [1 1 0 0 0 0 0 0 1 1]
(a > c) = [0 0 1 1 1 1 0 1 0 0]
(a == b) = 0
(a != b) = 1
a2 = a; (a2 == a) = 1
a2 = a; (a2 != a) = 0

===============================
   Testing Vec<double> (vec)
===============================
a = [0.2078 0.2889 0.0832 0.1281 0.5474 0.0823 0.2921 0.8916 0.2271 0.4318]
b = [0.1407 0.4004 0.6869 0.1707 0.4408 0.0453 0.3113 0.5062 0.1824 0.5110]
c = 0.7408
a+b = [0.3485 0.6893 0.7701 0.2988 0.9882 0.1277 0.6034 1.3978 0.4095 0.9429]
a+c = [0.9486 1.0297 0.8240 0.8689 1.2882 0.8231 1.0329 1.6324 0.9679 1.1726]
c+a = [0.9486 1.0297 0.8240 0.8689 1.2882 0.8231 1.0329 1.6324 0.9679 1.1726]
a+=b; a = [0.3485 0.6893 0.7701 0.2988 0.9882 0.1277 0.6034 1.3978 0.4095 0.9429]
a+=c; a = [0.9486 1.0297 0.8240 0.8689 1.2882 0.8231 1.0329 1.6324 0.9679 1.1726]
a-b = [0.0670 -0.1115 -0.6038 -0.0425 0.1066 0.0370 -0.0192 0.3854 0.0447 -0.0792]
a-c = [-0.5330 -0.4519 -0.6576 -0.6127 -0.1934 -0.6585 -0.4486 0.1508 -0.5137 -0.3089]
c-a = [0.5330 0.4519 0.6576 0.6127 0.1934 0.6585 0.4486 -0.1508 0.5137 0.3089]
a-=b; a = [0.0670 -0.1115 -0.6038 -0.0425 0.1066 0.0370 -0.0192 0.3854 0.0447 -0.0792]
a-=c; a = [-0.5330 -0.4519 -0.6576 -0.6127 -0.1934 -0.6585 -0.4486 0.1508 -0.5137 -0.3089]
-a = [-0.2078 -0.2889 -0.0832 -0.1281 -0.5474 -0.0823 -0.2921 -0.8916 -0.2271 -0.4318]
a*b = 1.2733
dot(a,b) = 1.2733
outer_product(a,b) = [[0.0292 0.0832 0.1427 0.0355 0.0916 0.0094 0.0647 0.1052 0.0379 0.1062]
 [0.0407 0.1157 0.1985 0.0493 0.1274 0.0131 0.0899 0.1462 0.0527 0.1476]
 [0.0117 0.0333 0.0571 0.0142 0.0367 0.0038 0.0259 0.0421 0.0152 0.0425]
 [0.0180 0.0513 0.0880 0.0219 0.0565 0.0058 0.0399 0.0649 0.0234 0.0655]
 [0.0770 0.2192 0.3760 0.0934 0.2413 0.0248 0.1704 0.2771 0.0998 0.2797]
 [0.0116 0.0330 0.0565 0.0140 0.0363 0.0037 0.0256 0.0417 0.0150 0.0421]
 [0.0411 0.1170 0.2007 0.0499 0.1288 0.0132 0.0909 0.1479 0.0533 0.1493]
 [0.1255 0.3570 0.6125 0.1522 0.3930 0.0404 0.2776 0.4513 0.1626 0.4556]
 [0.0320 0.0909 0.1560 0.0388 0.1001 0.0103 0.0707 0.1150 0.0414 0.1161]
 [0.0608 0.1729 0.2967 0.0737 0.1904 0.0196 0.1344 0.2186 0.0788 0.2207]]
a*c = [0.1539 0.2140 0.0616 0.0949 0.4055 0.0610 0.2164 0.6605 0.1682 0.3199]
c*a = [0.1539 0.2140 0.0616 0.0949 0.4055 0.0610 0.2164 0.6605 0.1682 0.3199]
a*=c; a = [0.1539 0.2140 0.0616 0.0949 0.4055 0.0610 0.2164 0.6605 0.1682 0.3199]
elem_mult(a,b) = [0.0292 0.1157 0.0571 0.0219 0.2413 0.0037 0.0909 0.4513 0.0414 0.2207]
elem_mult_out(a,b,x); x = [0.0292 0.1157 0.0571 0.0219 0.2413 0.0037 0.0909 0.4513 0.0414 0.2207]
elem_mult_inplace(a,b); b = [0.0292 0.1157 0.0571 0.0219 0.2413 0.0037 0.0909 0.4513 0.0414 0.2207]
elem_mult_sum(a,b) = 1.2733
a/c = [0.2805 0.3900 0.1123 0.1730 0.7389 0.1111 0.3944 1.2036 0.3066 0.5830]
c/a = [3.5653 2.5641 8.9064 5.7818 1.3534 8.9989 2.5357 0.8308 3.2617 1.7154]
a/=c; a = [0.2805 0.3900 0.1123 0.1730 0.7389 0.1111 0.3944 1.2036 0.3066 0.5830]
a/=b; a = [1.4764 0.7216 0.1211 0.7507 1.2417 1.8157 0.9385 1.7615 1.2451 0.8450]
elem_div(a,b) = [1.4764 0.7216 0.1211 0.7507 1.2417 1.8157 0.9385 1.7615 1.2451 0.8450]
elem_div_out(a,b,x); x = [1.4764 0.7216 0.1211 0.7507 1.2417 1.8157 0.9385 1.7615 1.2451 0.8450]
elem_div_sum(a,b) = 10.9173
concat(a,b) = [0.2078 0.2889 0.0832 0.1281 0.5474 0.0823 0.2921 0.8916 0.2271 0.4318 0.1407 0.4004 0.6869 0.1707 0.4408 0.0453 0.3113 0.5062 0.1824 0.5110]
concat(a,c) = [0.2078 0.2889 0.0832 0.1281 0.5474 0.0823 0.2921 0.8916 0.2271 0.4318 0.7408]
concat(c,a) = [0.7408 0.2078 0.2889 0.0832 0.1281 0.5474 0.0823 0.2921 0.8916 0.2271 0.4318]
concat(a,b,a) = [0.2078 0.2889 0.0832 0.1281 0.5474 0.0823 0.2921 0.8916 0.2271 0.4318 0.1407 0.4004 0.6869 0.1707 0.4408 0.0453 0.3113 0.5062 0.1824 0.5110 0.2078 0.2889 0.0832 0.1281 0.5474 0.0823 0.2921 0.8916 0.2271 0.4318]
concat(a,b,a,b) = [0.2078 0.2889 0.0832 0.1281 0.5474 0.0823 0.2921 0.8916 0.2271 0.4318 0.1407 0.4004 0.6869 0.1707 0.4408 0.0453 0.3113 0.5062 0.1824 0.5110 0.2078 0.2889 0.0832 0.1281 0.5474 0.0823 0.2921 0.8916 0.2271 0.4318 0.1407 0.4004 0.6869 0.1707 0.4408 0.0453 0.3113 0.5062 0.1824 0.5110]
concat(a,b,a,b,a) = [0.2078 0.2889 0.0832 0.1281 0.5474 0.0823 0.2921 0.8916 0.2271 0.4318 0.1407 0.4004 0.6869 0.1707 0.4408 0.0453 0.3113 0.5062 0.1824 0.5110 0.2078 0.2889 0.0832 0.1281 0.5474 0.0823 0.2921 0.8916 0.2271 0.4318 0.1407 0.4004 0.6869 0.1707 0.4408 0.0453 0.3113 0.5062 0.1824 0.5110 0.2078 0.2889 0.0832 0.1281 0.5474 0.0823 0.2921 0.8916 0.2271 0.4318]
a.T() = [[0.2078 0.2889 0.0832 0.1281 0.5474 0.0823 0.2921 0.8916 0.2271 0.4318]]
a.H() = [[0.2078 0.2889 0.0832 0.1281 0.5474 0.0823 0.2921 0.8916 0.2271 0.4318]]
a.size() = 10
a.set_size(a.size()+3, true); a = [0.2078 0.2889 0.0832 0.1281 0.5474 0.0823 0.2921 0.8916 0.2271 0.4318 0.0000 0.0000 0.0000]
a.set_size(a.size()-6, true); a = [0.2078 0.2889 0.0832 0.1281 0.5474 0.0823 0.2921]
a(5) = 0.0823
a(0,5) = [0.2078 0.2889 0.0832 0.1281 0.5474 0.0823]
a(6,-1) = [0.2921 0.8916 0.2271 0.4318]
a.right(3) = [0.8916 0.2271 0.4318]
a.left(4) = [0.2078 0.2889 0.0832 0.1281]
a.mid(3,2) = [0.1281 0.5474]
a.split(0) = [];   a = [0.2078 0.2889 0.0832 0.1281 0.5474 0.0823 0.2921 0.8916 0.2271 0.4318]
a.split(a.size()) = [0.2078 0.2889 0.0832 0.1281 0.5474 0.0823 0.2921 0.8916 0.2271 0.4318];   a = []
a.split(4) = [0.2078 0.2889 0.0832 0.1281];   a = [0.5474 0.0823 0.2921 0.8916 0.2271 0.4318]
a("0 5 6 7") = [0.2078 0.0823 0.2921 0.8916]
a(5) = a(6); a = [0.5474 0.0823 0.2921 0.8916 0.2271 0.2921]
a.shift_left(c,2) = [0.0832 0.1281 0.5474 0.0823 0.2921 0.8916 0.2271 0.4318 0.7408 0.7408]
a.shift_right(c) = [0.7408 0.2078 0.2889 0.0832 0.1281 0.5474 0.0823 0.2921 0.8916 0.2271]
a.shift_left(b.mid(0,2)) = [0.0832 0.1281 0.5474 0.0823 0.2921 0.8916 0.2271 0.4318 0.1407 0.4004]
a.shift_right(b.right(5)) = [0.0453 0.3113 0.5062 0.1824 0.5110 0.2078 0.2889 0.0832 0.1281 0.5474]
a.set_subvector(4,-1, c) = [0.2078 0.2889 0.0832 0.1281 0.7408 0.7408 0.7408 0.7408 0.7408 0.7408]
a.set_subvector(4,6, b(3,5)) = [0.2078 0.2889 0.0832 0.1281 0.1707 0.4408 0.0453 0.8916 0.2271 0.4318]
a.set_subvector(0, b) = [0.1407 0.4004 0.6869 0.1707 0.4408 0.0453 0.3113 0.5062 0.1824 0.5110]
a.replace_mid(4, b(3,5)) = [0.2078 0.2889 0.0832 0.1281 0.1707 0.4408 0.0453 0.8916 0.2271 0.4318]
a.del(6) = [0.2078 0.2889 0.0832 0.1281 0.5474 0.0823 0.8916 0.2271 0.4318]
a.del(3,9) = [0.2078 0.2889 0.0832]
a.ins(0,c) = [0.7408 0.2078 0.2889 0.0832 0.1281 0.5474 0.0823 0.2921 0.8916 0.2271 0.4318]
a.ins(2,c) = [0.2078 0.2889 0.7408 0.0832 0.1281 0.5474 0.0823 0.2921 0.8916 0.2271 0.4318]
a.ins(10,c) = [0.2078 0.2889 0.0832 0.1281 0.5474 0.0823 0.2921 0.8916 0.2271 0.4318 0.7408]
a.ins(3, b(0,2)) = [0.2078 0.2889 0.0832 0.1407 0.4004 0.6869 0.1281 0.5474 0.0823 0.2921 0.8916 0.2271 0.4318]
a.zeros(); a = [0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000 0.0000]
a.ones(); a = [1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000 1.0000]
a = c; a = [0.7408 0.7408 0.7408 0.7408 0.7408 0.7408 0.7408 0.7408 0.7408 0.7408]
a = b(0,4); a = [0.1407 0.4004 0.6869 0.1707 0.4408]
a = b.T(); a = [0.1407 0.4004 0.6869 0.1707 0.4408 0.0453 0.3113 0.5062 0.1824 0.5110]
a = b.T().T(); a = [0.1407 0.4004 0.6869 0.1707 0.4408 0.0453 0.3113 0.5062 0.1824 0.5110]

(a == c) = [0 0 0 0 0 0 0 0 0 0]
(a != c) = [1 1 1 1 1 1 1 1 1 1]
(a <= c) = [1 1 1 1 1 1 1 0 1 1]
(a >= c) = [0 0 0 0 0 0 0 1 0 0]
(a < c) = [1 1 1 1 1 1 1 0 1 1]
(a > c) = [0 0 0 0 0 0 0 1 0 0]
(a == b) = 0
(a != b) = 1
a2 = a; (a2 == a) = 1
a2 = a; (a2 != a) = 0

===============================================
   Testing Vec<std::complex<double> > (cvec)
===============================================
a = [-0.3968+0.1098i 0.7432-0.4435i -1.1627+0.9996i -0.7256+0.0559i 0.2146-0.1613i 0.5573-0.6673i -0.8023+0.7836i -0.8702+1.1201i 0.0713-0.1312i 1.2300+1.0870i]
b = [0.3103+0.6505i -0.1454-0.0310i -0.4330+1.0476i 0.6536+0.9162i -0.2109-0.0526i -0.0937+0.1922i -0.2091+0.3949i 0.2119-0.9187i -0.6252-0.9434i 0.4294-0.5383i]
c = 0.5613-0.7500i
a+b = [-0.0865+0.7603i 0.5978-0.4744i -1.5957+2.0472i -0.0721+0.9721i 0.0037-0.2139i 0.4636-0.4751i -1.0114+1.1785i -0.6583+0.2014i -0.5538-1.0746i 1.6594+0.5487i]
a+c = [0.1645-0.6402i 1.3045-1.1935i -0.6014+0.2496i -0.1643-0.6941i 0.7759-0.9113i 1.1186-1.4173i -0.2410+0.0336i -0.3089+0.3701i 0.6326-0.8812i 1.7912+0.3369i]
c+a = [0.1645-0.6402i 1.3045-1.1935i -0.6014+0.2496i -0.1643-0.6941i 0.7759-0.9113i 1.1186-1.4173i -0.2410+0.0336i -0.3089+0.3701i 0.6326-0.8812i 1.7912+0.3369i]
a+=b; a = [-0.0865+0.7603i 0.5978-0.4744i -1.5957+2.0472i -0.0721+0.9721i 0.0037-0.2139i 0.4636-0.4751i -1.0114+1.1785i -0.6583+0.2014i -0.5538-1.0746i 1.6594+0.5487i]
a+=c; a = [0.1645-0.6402i 1.3045-1.1935i -0.6014+0.2496i -0.1643-0.6941i 0.7759-0.9113i 1.1186-1.4173i -0.2410+0.0336i -0.3089+0.3701i 0.6326-0.8812i 1.7912+0.3369i]
a-b = [-0.7070-0.5406i 0.8886-0.4125i -0.7296-0.0480i -1.3792-0.8603i 0.4254-0.1086i 0.6511-0.8595i -0.5932+0.3887i -1.0820+2.0388i 0.6965+0.8122i 0.8006+1.6252i]
a-c = [-0.9580+0.8599i 0.1819+0.3066i -1.7239+1.7497i -1.2869+0.8060i -0.3467+0.5888i -0.0040+0.0828i -1.3636+1.5337i -1.4314+1.8701i -0.4899+0.6188i 0.6687+1.8370i]
c-a = [0.9580-0.8599i -0.1819-0.3066i 1.7239-1.7497i 1.2869-0.8060i 0.3467-0.5888i 0.0040-0.0828i 1.3636-1.5337i 1.4314-1.8701i 0.4899-0.6188i -0.6687-1.8370i]
a-=b; a = [-0.7070-0.5406i 0.8886-0.4125i -0.7296-0.0480i -1.3792-0.8603i 0.4254-0.1086i 0.6511-0.8595i -0.5932+0.3887i -1.0820+2.0388i 0.6965+0.8122i 0.8006+1.6252i]
a-=c; a = [-0.9580+0.8599i 0.1819+0.3066i -1.7239+1.7497i -1.2869+0.8060i -0.3467+0.5888i -0.0040+0.0828i -1.3636+1.5337i -1.4314+1.8701i -0.4899+0.6188i 0.6687+1.8370i]
-a = [0.3968-0.1098i -0.7432+0.4435i 1.1627-0.9996i 0.7256-0.0559i -0.2146+0.1613i -0.5573+0.6673i 0.8023-0.7836i 0.8702-1.1201i -0.0713+0.1312i -1.2300-1.0870i]
a*b = 0.2846-1.8939i
dot(a,b) = 0.2846-1.8939i
outer_product(a,b) = [[-0.1945-0.2240i 0.0611-0.0037i 0.0567-0.4632i -0.3599-0.2917i 0.0894-0.0023i 0.0161-0.0866i 0.0396-0.1796i 0.0168+0.3878i 0.3517+0.3056i -0.1112+0.2607i]
 [0.5190+0.3458i -0.1218+0.0414i 0.1427+0.9706i 0.8920+0.3911i -0.1801+0.0544i 0.0156+0.1844i 0.0197+0.3862i -0.2499-0.7767i -0.8830-0.4239i 0.0804-0.5905i]
 [-1.0109-0.4461i 0.2000-0.1093i -0.5437-1.6509i -1.6757-0.4119i 0.2978-0.1496i -0.0832-0.3172i -0.1516-0.6682i 0.6720+1.2799i 1.6699+0.4719i 0.0388+1.0551i]
 [-0.2615-0.4546i 0.1072+0.0144i 0.2556-0.7843i -0.5254-0.6282i 0.1559+0.0264i 0.0573-0.1447i 0.1297-0.2982i -0.1024+0.6784i 0.5064+0.6496i -0.2815+0.4146i]
 [0.1715+0.0895i -0.0362+0.0168i 0.0760+0.2946i 0.2880+0.0912i -0.0537+0.0227i 0.0109+0.0564i 0.0188+0.1185i -0.1027-0.2313i -0.2863-0.1016i 0.0053-0.1848i]
 [0.6069+0.1555i -0.1017+0.0797i 0.4577+0.8728i 0.9756+0.0745i -0.1526+0.1114i 0.0760+0.1697i 0.1469+0.3596i -0.4949-0.6534i -0.9779-0.1086i -0.1199-0.5865i]
 [-0.7586-0.2787i 0.1409-0.0891i -0.4735-1.1798i -1.2423-0.2229i 0.2104-0.1230i -0.0754-0.2277i -0.1417-0.4807i 0.5499+0.9031i 1.2408+0.2670i 0.0773+0.7683i]
 [-0.9986-0.2185i 0.1612-0.1359i -0.7966-1.3966i -1.5949-0.0652i 0.2424-0.1904i -0.1337-0.2723i -0.2603-0.5779i 0.8446+1.0367i 1.6007+0.1207i 0.2293+0.9493i]
 [0.1075+0.0057i -0.0144+0.0169i 0.1066+0.1315i 0.1668-0.0204i -0.0219+0.0239i 0.0185+0.0260i 0.0369+0.0556i -0.1054-0.0933i -0.1684+0.0147i -0.0400-0.0947i]
 [-0.3254+1.1373i -0.1451-0.1961i -1.6713+0.8178i -0.1920+1.8373i -0.2021-0.2939i -0.3242+0.1345i -0.6865+0.2584i 1.2591-0.8996i 0.2565-1.8399i 1.1132-0.1953i]]
a*c = [-0.1403+0.3592i 0.0845-0.8063i 0.0972+1.4331i -0.3653+0.5756i -0.0005-0.2515i -0.1877-0.7925i 0.1374+1.0416i 0.3517+1.2813i -0.0584-0.1271i 1.5056-0.3125i]
c*a = [-0.1403+0.3592i 0.0845-0.8063i 0.0972+1.4331i -0.3653+0.5756i -0.0005-0.2515i -0.1877-0.7925i 0.1374+1.0416i 0.3517+1.2813i -0.0584-0.1271i 1.5056-0.3125i]
a*=c; a = [-0.1403+0.3592i 0.0845-0.8063i 0.0972+1.4331i -0.3653+0.5756i -0.0005-0.2515i -0.1877-0.7925i 0.1374+1.0416i 0.3517+1.2813i -0.0584-0.1271i 1.5056-0.3125i]
elem_mult(a,b) = [-0.1945-0.2240i -0.1218+0.0414i -0.5437-1.6509i -0.5254-0.6282i -0.0537+0.0227i 0.0760+0.1697i -0.1417-0.4807i 0.8446+1.0367i -0.1684+0.0147i 1.1132-0.1953i]
elem_mult_out(a,b,x); x = [-0.1945-0.2240i -0.1218+0.0414i -0.5437-1.6509i -0.5254-0.6282i -0.0537+0.0227i 0.0760+0.1697i -0.1417-0.4807i 0.8446+1.0367i -0.1684+0.0147i 1.1132-0.1953i]
elem_mult_inplace(a,b); b = [-0.1945-0.2240i -0.1218+0.0414i -0.5437-1.6509i -0.5254-0.6282i -0.0537+0.0227i 0.0760+0.1697i -0.1417-0.4807i 0.8446+1.0367i -0.1684+0.0147i 1.1132-0.1953i]
elem_mult_sum(a,b) = 0.2846-1.8939i
a/c = [-0.3476-0.2689i 0.8543+0.3516i -1.5979-0.3544i -0.5118-0.5844i 0.2751+0.0803i 0.9267+0.0496i -1.1829-0.1845i -1.5138-0.0273i 0.1578-0.0229i -0.1423+1.7464i]
c/a = [-1.8000+1.3922i 1.0010-0.4119i -0.5965+0.1323i -0.8481+0.9683i 3.3501-0.9773i 1.0760-0.0575i -0.8253+0.1288i -0.6604+0.0119i 6.2077+0.9029i -0.0464-0.5688i]
a/=c; a = [-0.3476-0.2689i 0.8543+0.3516i -1.5979-0.3544i -0.5118-0.5844i 0.2751+0.0803i 0.9267+0.0496i -1.1829-0.1845i -1.5138-0.0273i 0.1578-0.0229i -0.1423+1.7464i]
a/=b; a = [-0.0995+0.5625i -4.2687+3.9602i 1.2068+0.6110i -0.3340+0.5537i -0.7783+0.9592i -3.9467-0.9747i 2.3900+0.7660i -1.3651-0.6324i 0.0618+0.1166i -0.1201+2.3809i]
elem_div(a,b) = [-0.0995+0.5625i -4.2687+3.9602i 1.2068+0.6110i -0.3340+0.5537i -0.7783+0.9592i -3.9467-0.9747i 2.3900+0.7660i -1.3651-0.6324i 0.0618+0.1166i -0.1201+2.3809i]
elem_div_out(a,b,x); x = [-0.0995+0.5625i -4.2687+3.9602i 1.2068+0.6110i -0.3340+0.5537i -0.7783+0.9592i -3.9467-0.9747i 2.3900+0.7660i -1.3651-0.6324i 0.0618+0.1166i -0.1201+2.3809i]
elem_div_sum(a,b) = -7.2537+8.3031i
concat(a,b) = [-0.3968+0.1098i 0.7432-0.4435i -1.1627+0.9996i -0.7256+0.0559i 0.2146-0.1613i 0.5573-0.6673i -0.8023+0.7836i -0.8702+1.1201i 0.0713-0.1312i 1.2300+1.0870i 0.3103+0.6505i -0.1454-0.0310i -0.4330+1.0476i 0.6536+0.9162i -0.2109-0.0526i -0.0937+0.1922i -0.2091+0.3949i 0.2119-0.9187i -0.6252-0.9434i 0.4294-0.5383i]
concat(a,c) = [-0.3968+0.1098i 0.7432-0.4435i -1.1627+0.9996i -0.7256+0.0559i 0.2146-0.1613i 0.5573-0.6673i -0.8023+0.7836i -0.8702+1.1201i 0.0713-0.1312i 1.2300+1.0870i 0.5613-0.7500i]
concat(c,a) = [0.5613-0.7500i -0.3968+0.1098i 0.7432-0.4435i -1.1627+0.9996i -0.7256+0.0559i 0.2146-0.1613i 0.5573-0.6673i -0.8023+0.7836i -0.8702+1.1201i 0.0713-0.1312i 1.2300+1.0870i]
concat(a,b,a) = [-0.3968+0.1098i 0.7432-0.4435i -1.1627+0.9996i -0.7256+0.0559i 0.2146-0.1613i 0.5573-0.6673i -0.8023+0.7836i -0.8702+1.1201i 0.0713-0.1312i 1.2300+1.0870i 0.3103+0.6505i -0.1454-0.0310i -0.4330+1.0476i 0.6536+0.9162i -0.2109-0.0526i -0.0937+0.1922i -0.2091+0.3949i 0.2119-0.9187i -0.6252-0.9434i 0.4294-0.5383i -0.3968+0.1098i 0.7432-0.4435i -1.1627+0.9996i -0.7256+0.0559i 0.2146-0.1613i 0.5573-0.6673i -0.8023+0.7836i -0.8702+1.1201i 0.0713-0.1312i 1.2300+1.0870i]
concat(a,b,a,b) = [-0.3968+0.1098i 0.7432-0.4435i -1.1627+0.9996i -0.7256+0.0559i 0.2146-0.1613i 0.5573-0.6673i -0.8023+0.7836i -0.8702+1.1201i 0.0713-0.1312i 1.2300+1.0870i 0.3103+0.6505i -0.1454-0.0310i -0.4330+1.0476i 0.6536+0.9162i -0.2109-0.0526i -0.0937+0.1922i -0.2091+0.3949i 0.2119-0.9187i -0.6252-0.9434i 0.4294-0.5383i -0.3968+0.1098i 0.7432-0.4435i -1.1627+0.9996i -0.7256+0.0559i 0.2146-0.1613i 0.5573-0.6673i -0.8023+0.7836i -0.8702+1.1201i 0.0713-0.1312i 1.2300+1.0870i 0.3103+0.6505i -0.1454-0.0310i -0.4330+1.0476i 0.6536+0.9162i -0.2109-0.0526i -0.0937+0.1922i -0.2091+0.3949i 0.2119-0.9187i -0.6252-0.9434i 0.4294-0.5383i]
concat(a,b,a,b,a) = [-0.3968+0.1098i 0.7432-0.4435i -1.1627+0.9996i -0.7256+0.0559i 0.2146-0.1613i 0.5573-0.6673i -0.8023+0.7836i -0.8702+1.1201i 0.0713-0.1312i 1.2300+1.0870i 0.3103+0.6505i -0.1454-0.0310i -0.4330+1.0476i 0.6536+0.9162i -0.2109-0.0526i -0.0937+0.1922i -0.2091+0.3949i 0.2119-0.9187i -0.6252-0.9434i 0.4294-0.5383i -0.3968+0.1098i 0.7432-0.4435i -1.1627+0.9996i -0.7256+0.0559i 0.2146-0.1613i 0.5573-0.6673i -0.8023+0.7836i -0.8702+1.1201i 0.0713-0.1312i 1.2300+1.0870i 0.3103+0.6505i -0.1454-0.0310i -0.4330+1.0476i 0.6536+0.9162i -0.2109-0.0526i -0.0937+0.1922i -0.2091+0.3949i 0.2119-0.9187i -0.6252-0.9434i 0.4294-0.5383i -0.3968+0.1098i 0.7432-0.4435i -1.1627+0.9996i -0.7256+0.0559i 0.2146-0.1613i 0.5573-0.6673i -0.8023+0.7836i -0.8702+1.1201i 0.0713-0.1312i 1.2300+1.0870i]
a.T() = [[-0.3968+0.1098i 0.7432-0.4435i -1.1627+0.9996i -0.7256+0.0559i 0.2146-0.1613i 0.5573-0.6673i -0.8023+0.7836i -0.8702+1.1201i 0.0713-0.1312i 1.2300+1.0870i]]
a.H() = [[-0.3968-0.1098i 0.7432+0.4435i -1.1627-0.9996i -0.7256-0.0559i 0.2146+0.1613i 0.5573+0.6673i -0.8023-0.7836i -0.8702-1.1201i 0.0713+0.1312i 1.2300-1.0870i]]
a.size() = 10
a.set_size(a.size()+3, true); a = [-0.3968+0.1098i 0.7432-0.4435i -1.1627+0.9996i -0.7256+0.0559i 0.2146-0.1613i 0.5573-0.6673i -0.8023+0.7836i -0.8702+1.1201i 0.0713-0.1312i 1.2300+1.0870i 0.0000+0.0000i 0.0000+0.0000i 0.0000+0.0000i]
a.set_size(a.size()-6, true); a = [-0.3968+0.1098i 0.7432-0.4435i -1.1627+0.9996i -0.7256+0.0559i 0.2146-0.1613i 0.5573-0.6673i -0.8023+0.7836i]
a(5) = 0.5573-0.6673i
a(0,5) = [-0.3968+0.1098i 0.7432-0.4435i -1.1627+0.9996i -0.7256+0.0559i 0.2146-0.1613i 0.5573-0.6673i]
a(6,-1) = [-0.8023+0.7836i -0.8702+1.1201i 0.0713-0.1312i 1.2300+1.0870i]
a.right(3) = [-0.8702+1.1201i 0.0713-0.1312i 1.2300+1.0870i]
a.left(4) = [-0.3968+0.1098i 0.7432-0.4435i -1.1627+0.9996i -0.7256+0.0559i]
a.mid(3,2) = [-0.7256+0.0559i 0.2146-0.1613i]
a.split(0) = [];   a = [-0.3968+0.1098i 0.7432-0.4435i -1.1627+0.9996i -0.7256+0.0559i 0.2146-0.1613i 0.5573-0.6673i -0.8023+0.7836i -0.8702+1.1201i 0.0713-0.1312i 1.2300+1.0870i]
a.split(a.size()) = [-0.3968+0.1098i 0.7432-0.4435i -1.1627+0.9996i -0.7256+0.0559i 0.2146-0.1613i 0.5573-0.6673i -0.8023+0.7836i -0.8702+1.1201i 0.0713-0.1312i 1.2300+1.0870i];   a = []
a.split(4) = [-0.3968+0.1098i 0.7432-0.4435i -1.1627+0.9996i -0.7256+0.0559i];   a = [0.2146-0.1613i 0.5573-0.6673i -0.8023+0.7836i -0.8702+1.1201i 0.0713-0.1312i 1.2300+1.0870i]
a("0 5 6 7") = [-0.3968+0.1098i 0.5573-0.6673i -0.8023+0.7836i -0.8702+1.1201i]
a(5) = a(6); a = [0.2146-0.1613i 0.5573-0.6673i -0.8023+0.7836i -0.8702+1.1201i 0.0713-0.1312i -0.8023+0.7836i]
a.shift_left(c,2) = [-1.1627+0.9996i -0.7256+0.0559i 0.2146-0.1613i 0.5573-0.6673i -0.8023+0.7836i -0.8702+1.1201i 0.0713-0.1312i 1.2300+1.0870i 0.5613-0.7500i 0.5613-0.7500i]
a.shift_right(c) = [0.5613-0.7500i -0.3968+0.1098i 0.7432-0.4435i -1.1627+0.9996i -0.7256+0.0559i 0.2146-0.1613i 0.5573-0.6673i -0.8023+0.7836i -0.8702+1.1201i 0.0713-0.1312i]
a.shift_left(b.mid(0,2)) = [-1.1627+0.9996i -0.7256+0.0559i 0.2146-0.1613i 0.5573-0.6673i -0.8023+0.7836i -0.8702+1.1201i 0.0713-0.1312i 1.2300+1.0870i 0.3103+0.6505i -0.1454-0.0310i]
a.shift_right(b.right(5)) = [-0.0937+0.1922i -0.2091+0.3949i 0.2119-0.9187i -0.6252-0.9434i 0.4294-0.5383i -0.3968+0.1098i 0.7432-0.4435i -1.1627+0.9996i -0.7256+0.0559i 0.2146-0.1613i]
a.set_subvector(4,-1, c) = [-0.3968+0.1098i 0.7432-0.4435i -1.1627+0.9996i -0.7256+0.0559i 0.5613-0.7500i 0.5613-0.7500i 0.5613-0.7500i 0.5613-0.7500i 0.5613-0.7500i 0.5613-0.7500i]
a.set_subvector(4,6, b(3,5)) = [-0.3968+0.1098i 0.7432-0.4435i -1.1627+0.9996i -0.7256+0.0559i 0.6536+0.9162i -0.2109-0.0526i -0.0937+0.1922i -0.8702+1.1201i 0.0713-0.1312i 1.2300+1.0870i]
a.set_subvector(0, b) = [0.3103+0.6505i -0.1454-0.0310i -0.4330+1.0476i 0.6536+0.9162i -0.2109-0.0526i -0.0937+0.1922i -0.2091+0.3949i 0.2119-0.9187i -0.6252-0.9434i 0.4294-0.5383i]
a.replace_mid(4, b(3,5)) = [-0.3968+0.1098i 0.7432-0.4435i -1.1627+0.9996i -0.7256+0.0559i 0.6536+0.9162i -0.2109-0.0526i -0.0937+0.1922i -0.8702+1.1201i 0.0713-0.1312i 1.2300+1.0870i]
a.del(6) = [-0.3968+0.1098i 0.7432-0.4435i -1.1627+0.9996i -0.7256+0.0559i 0.2146-0.1613i 0.5573-0.6673i -0.8702+1.1201i 0.0713-0.1312i 1.2300+1.0870i]
a.del(3,9) = [-0.3968+0.1098i 0.7432-0.4435i -1.1627+0.9996i]
a.ins(0,c) = [0.5613-0.7500i -0.3968+0.1098i 0.7432-0.4435i -1.1627+0.9996i -0.7256+0.0559i 0.2146-0.1613i 0.5573-0.6673i -0.8023+0.7836i -0.8702+1.1201i 0.0713-0.1312i 1.2300+1.0870i]
a.ins(2,c) = [-0.3968+0.1098i 0.7432-0.4435i 0.5613-0.7500i -1.1627+0.9996i -0.7256+0.0559i 0.2146-0.1613i 0.5573-0.6673i -0.8023+0.7836i -0.8702+1.1201i 0.0713-0.1312i 1.2300+1.0870i]
a.ins(10,c) = [-0.3968+0.1098i 0.7432-0.4435i -1.1627+0.9996i -0.7256+0.0559i 0.2146-0.1613i 0.5573-0.6673i -0.8023+0.7836i -0.8702+1.1201i 0.0713-0.1312i 1.2300+1.0870i 0.5613-0.7500i]
a.ins(3, b(0,2)) = [-0.3968+0.1098i 0.7432-0.4435i -1.1627+0.9996i 0.3103+0.6505i -0.1454-0.0310i -0.4330+1.0476i -0.7256+0.0559i 0.2146-0.1613i 0.5573-0.6673i -0.8023+0.7836i -0.8702+1.1201i 0.0713-0.1312i 1.2300+1.0870i]
a.zeros(); a = [0.0000+0.0000i 0.0000+0.0000i 0.0000+0.0000i 0.0000+0.0000i 0.0000+0.0000i 0.0000+0.0000i 0.0000+0.0000i 0.0000+0.0000i 0.0000+0.0000i 0.0000+0.0000i]
a.ones(); a = [1.0000+0.0000i 1.0000+0.0000i 1.0000+0.0000i 1.0000+0.0000i 1.0000+0.0000i 1.0000+0.0000i 1.0000+0.0000i 1.0000+0.0000i 1.0000+0.0000i 1.0000+0.0000i]
a = c; a = [0.5613-0.7500i 0.5613-0.7500i 0.5613-0.7500i 0.5613-0.7500i 0.5613-0.7500i 0.5613-0.7500i 0.5613-0.7500i 0.5613-0.7500i 0.5613-0.7500i 0.5613-0.7500i]
a = b(0,4); a = [0.3103+0.6505i -0.1454-0.0310i -0.4330+1.0476i 0.6536+0.9162i -0.2109-0.0526i]
a = b.T(); a = [0.3103+0.6505i -0.1454-0.0310i -0.4330+1.0476i 0.6536+0.9162i -0.2109-0.0526i -0.0937+0.1922i -0.2091+0.3949i 0.2119-0.9187i -0.6252-0.9434i 0.4294-0.5383i]
a = b.T().T(); a = [0.3103+0.6505i -0.1454-0.0310i -0.4330+1.0476i 0.6536+0.9162i -0.2109-0.0526i -0.0937+0.1922i -0.2091+0.3949i 0.2119-0.9187i -0.6252-0.9434i 0.4294-0.5383i]

(a == c) = [0 0 0 0 0 0 0 0 0 0]
(a != c) = [1 1 1 1 1 1 1 1 1 1]

Testing double vector initialisation with: "23.3 1232.7 0.111 1.525 0.333":
v = [23.3000 1232.7000 0.1110 1.5250 0.3330]
Testing double vector initialisation with: "-10.000 :.5:-4.5":
v = [-10.0000 -9.5000 -9.0000 -8.5000 -8.0000 -7.5000 -7.0000 -6.5000 -6.0000 -5.5000 -5.0000 -4.5000]
Testing double vector initialisation with: "0:.2: 3":
v = [0.0000 0.2000 0.4000 0.6000 0.8000 1.0000 1.2000 1.4000 1.6000 1.8000 2.0000 2.2000 2.4000 2.6000 2.8000 3.0000]
Testing double vector initialisation with: "1e0:1.5:1E+1":
v = [1.0000 2.5000 4.0000 5.5000 7.0000 8.5000 10.0000]
Testing int vector initialisation with: "0xA : -010":
iv = [10 9 8 7 6 5 4 3 2 1 0 -1 -2 -3 -4 -5 -6 -7 -8]
Testing int vector initialisation with: "-5:3:9":
iv = [-5 -2 1 4 7]
Testing short int vector initialisation with: "3 0xF -10, 0133 0177, 0x0 ":
sv = [3 15 -10 91 127 0]
Testing complex vector initialisation with: " (0.3, 0.4)  .2-.01i, 1e-3+0.25i":
cv = [0.3000+0.4000i 0.2000-0.0100i 0.0010+0.2500i]
Testing bit vector initialisation with: "1 1 0,1  1  ,  0 ,1  ":
bv = [1 1 0 1 1 0 1]

v = [1.0000 2.0000 3.4000 -4.5000 6.7000]
y = 0.7600
rem(v, y) = [0.2400 0.4800 0.3600 -0.7000 0.6200]
rem(10, v) = [0.0000 0.0000 3.2000 1.0000 3.3000]
M = [[1.0000 2.3000]
 [4.5000 -6.7000]]
rem(M, y) = [[0.2400 0.0200]
 [0.7000 -0.6200]]
rem(10, M) = [[0.0000 0.8000]
 [1.0000 3.3000]]

any(b1) = 1
any(b2) = 0
all(b3) = 1
all(b4) = 0
