/*! 
\page documentation Documentation Rules

All classes in \c IT++ shall be properly documented with Doxygen comments in the include (.h) file. 
The implementation (.c/.cpp) should be documented according to normal standard for well documented code.

An example of how the interface of a class shall be implemented in \c IT++ is shown here:

\verbatim
/*!
  \brief Brief decription of My_Class here

  Detailed description of My_Class here. With example code if needed.
*/
class My_Class {

public:

  //!Default constructor
  My_Class(void) { setup_done = false; }

  /*!
    \brief Constructor that initializes the class with parameters

    Detailed description of the constructor here if needed

    \param param1 (Input) [size] Description of \a param1 here
    \param param2 (Input) [size] Description of \a param2 here
  */
  My_Class(TYPE1 param1, TYPE2 param2) { setup(param1,param2); }

  /*!
    \brief Setup function for My_Class

    Detailed description of the setup function here if needed

    \param param1 (Input) [size] Description of \a param1 here
    \param param2 (Input) [size] Description of \a param2 here
  */
  void setup(TYPE1 param1, TYPE2 param2);

  /*!
    \brief Brief description of member_function1

    Detailed description of member_function1 here if needed

    \param param1 (Input) [size] Description of \a param1 here
    \param param2 (Input) [size] Description of \a param2 here
    \param param3 (Output) [size] Description of \a param3 here
    \return Descrition of the return value here
  */
  TYPE4 member_function1(TYPE1 param1, TYPE2 param2, TYPE3 &param3);

private:

  bool setup_done;         //Variable that checks if the class is properly initialized with parameters
  TYPE1 private_variable1; //Short description of private_variable1 here
  TYPE2 private_variable2; //Short description of private_variable2 here
};
\endverbatim

Scalar parameters does not need to have any \c [size] information.
All files shall have a doxygen \c file tag that makes use of CVS for Revisions and Date, see example below. 

\verbatim
/*! 
  \file 
  \brief Brief description of the file here
  \author Your Name 
  
  Detailed description of the file here if needed.

  $Revision$ 

  $Date$
*/
\endverbatim

Furthermore, all files, except from the files in the \c IT++/tests folder shall 
begin the following copyright notice:
\verbatim
/*---------------------------------------------------------------------------*
 *                                   IT++			             *
 *---------------------------------------------------------------------------*
 * Copyright (c) 1995-2002 by Tony Ottosson, Thomas Eriksson, Pål Frenger,   *
 * Tobias Ringström, and Jonas Samuelsson.                                   *
 *                                                                           *
 * Permission to use, copy, modify, and distribute this software and its     *
 * documentation under the terms of the GNU General Public License is hereby *
 * granted. No representations are made about the suitability of this        *
 * software for any purpose. It is provided "as is" without expressed or     *
 * implied warranty. See the GNU General Public License for more details.    *
 *---------------------------------------------------------------------------*/
\endverbatim

All functions must be added to a Doxygen group in order to appear in the printed
documentation. The following code example defines the group \c my_group:

\verbatim
/*! 
  \defgroup my_group Brief description of the group here
  
  Detailed description of the group here 
*/
\endverbatim

The following example shows how to document the function \c my_function and to
add it to the group \c my_group:

\verbatim
/*!
  \brief Brief description of my_function here
  \ingroup my_group

  Detailed description of my_function here

  \param param1 (Input) [size] Description of \a param1 here
  \param param2 (Output) [size] Description of \a param2 here
  \return Description of the return value here
*/
TYPE3 my_function(TYPE1 param1, TYPE2 &param2);
\endverbatim

*/
