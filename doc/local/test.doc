/*! 
\page test Test Rules

This section describes rules for how functionallity should be verified within the \c IT++ library. 
In the folder "it++/tests" test files are proveded. All functionallity should be tested using these test files.

\section test_file The Test File

New functionallity should be accompanied by a test file. The test file is an implementation i C++ that test the functionallity of a function/class or a group of functions/classes. The test file should test relevant parameter settings and input/output relations to guarrantee correct funtionallity of the corresponding classes/functions. The test files should be maintained using version control and updated whenever new functionality is added to \c IT++.

The test file should print relevant data to standard output that can be used to verify functionality. All relevant parameter settings should be tested.

The test file should be placed in the \c it++/tests/ folder and should have a name ending with \c "_test.cpp".

\section reference_file The Reference File

Consider a test file named \c XXX_test.cpp. A reference file namned \c XXX_test.ref should accompany the test file. The reference file contains a reference printout of the standard output as generated when running the test file. The reference file should be maintained using version control and updated according to the test file. The reference files are generated automatically by runnning gmake in \c it++/tests, see below.

\section compiling_test_files Compiling Test Files Using GNU make
When running
\verbatim
make 
\endverbatim
 in \c it++/tests all test files are compiled. If the corrspeonding reference file does not exist it is created by running the compiled testfile and dumping the std output to and a reference file. 

\section testing_using_make Testing Using GNU make
When running 
\verbatim
make test
\endverbatim
in \c it++/tests all test files are runned and the output is compared with the reference file using the unix command \c diff. 

*/
